plugins {
    id 'java-gradle-plugin'
    id 'maven-publish'
    id 'signing'
    id 'com.gradle.plugin-publish'
}

group 'nl.martijndwars'
version '1.2.5'

sourceCompatibility = 1.8

repositories {
    maven {
        url 'https://artifacts.metaborg.org/content/repositories/releases/'
        mavenContent {
            includeGroup 'org.metaborg'
            includeGroup 'org.apache.commons'
            releasesOnly()
        }
    }
    maven {
        url 'https://artifacts.metaborg.org/content/repositories/snapshots/'
        mavenContent {
            includeGroup 'org.metaborg'
            releasesOnly()
        }
    }
    maven {
        url 'https://artifacts.metaborg.org/content/groups/public/'
        mavenContent {
            includeGroup 'build.pluto'
            includeGroup 'com.cedarsoftware'
        }
    }
    maven {
        url 'https://sugar-lang.github.io/mvnrepository/'
        mavenContent {
            includeGroup 'org.sugarj'
        }
    }
    maven {
        url 'http://nexus.usethesource.io/content/repositories/public/'
        mavenContent {
            includeGroup 'io.usethesource'
        }
    }
    jcenter()
}

dependencies {
    compile group: 'org.metaborg', name: 'org.metaborg.spoofax.core', version: metaborgVersion
    compile group: 'org.metaborg', name: 'org.metaborg.spoofax.meta.core', version: metaborgVersion
    compile group: 'org.metaborg', name: 'org.metaborg.spt.core', version: metaborgVersion

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: junitVersion
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junitVersion

    // See https://intellij-support.jetbrains.com/hc/en-us/community/posts/360002590379/comments/360000316199
    testRuntimeOnly group: 'org.junit.vintage', name: 'junit-vintage-engine', version: junitVersion
    testRuntimeOnly group: 'org.junit.platform', name: 'junit-platform-launcher', version: '1.7.1'
}

def generatedResourcesDir = file("$buildDir/generated-resources")

task generateVersionFile {
    def outputFile = file("$generatedResourcesDir/version.properties")
    inputs.property("version", metaborgVersion)
    outputs.file(outputFile)
    doLast {
        outputFile.text = "metaborgVersion=${metaborgVersion}"
    }
}

sourceSets.main.output.dir generatedResourcesDir, builtBy: generateVersionFile

compileJava {
    options.compilerArgs += '-Xlint:deprecation'
}

pluginBundle {
    website = 'https://github.com/MartijnDwars/spoofax-gradle-plugin'
    vcsUrl = 'https://github.com/MartijnDwars/spoofax-gradle-plugin'
    tags = ['spoofax', 'metaborg', 'language', 'compiler']
}

gradlePlugin {
    plugins {
        spoofaxPlugin {
            id = 'nl.martijndwars.spoofax'
            displayName = 'Spoofax Gradle Plugin'
            description = 'Build Spoofax languages using Gradle.'
            implementationClass = 'nl.martijndwars.spoofax.SpoofaxPlugin'
        }
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events 'passed', 'skipped', 'failed'
        exceptionFormat 'full'
    }
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom {
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }
                developers {
                    developer {
                        id = 'martijndwars'
                        name = 'Martijn Dwars'
                        email = 'ikben@martijndwars.nl'
                    }
                }
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

